name: Lint, build and test

on: [push, pull_request]

env:
  DOTNET_VERSION: 5.0.100
  PACKAGE_ID: strategy
  NUPKG_PATH: ./src/strategy/nupkg/*.nupkg
  PROJECT_PATH: src/strategy/strategy.csproj

jobs:

  # The lint job
  lint:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format

      - name: Add dotnet-format problem matcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      - name: Restore dotnet tools
        uses: xt0rted/dotnet-tool-restore@v1

      - name: Run dotnet format
        uses: xt0rted/dotnet-format@v1.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  test-build-pack:
    runs-on: ubuntu-latest
    needs: lint
    steps:

    # Checkout the repo
    - name: Checkout repo
      uses: actions/checkout@v2

    # Setup .NET
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Restore
    - name: Restore
      run: dotnet restore

    # Build
    - name: Build
      run: dotnet build --no-restore

    # Run tests
    - name: Test
      run: dotnet test --no-build --verbosity normal

    # Pack the tool as nupkg
    #- name: Pack
    #  run: |
    #    dotnet pack -v normal -c Release --no-restore \
    #      --include-symbols --include-source \
    #      -p:PackageID=${{ env.PACKAGE_ID }} \
    #      -p:PackageVersion=${GITHUB_RUN_ID} \
    #      ${{ env.PROJECT_PATH }}
    #
    ## Upload nupkg to build artifacts
    #- name: Upload Artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: ${{ env.PACKAGE_ID }}
    #    path: ${{ env.NUPKG_PATH }}
